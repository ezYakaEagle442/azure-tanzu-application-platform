# This workflow will install TAP on AKS
name: Test KubeLogin for AAD Integration

env:


  # ==== Versions ====

  # ==== General settings  ====  

  RG_APP: rg-aks-tap-apps # RG where to deploy the other Azure services: AKS, TAP, ACR, MySQL, etc.
  
  # ==== Secrets ====

  credentials: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  GH_PAT: ${{ secrets.GH_PAT }}

on:
  workflow_dispatch:
  workflow_call:

jobs:
 
  kube-login:
    runs-on: ubuntu-latest
    steps:

    - name: Login with GHA Runner SP
      uses: azure/login@v1 # https://github.com/marketplace/actions/azure-login
      with:
        creds: ${{ env.credentials }} # ${{ secrets.AZURE_CREDENTIALS }}

    - name: Checkout
      uses: actions/checkout@v3 # https://github.com/actions/checkout

    - name: Set Base environment variables
      run: |

        AKS_CLUSTER_NAME=$(az deployment group show --name aks-main -g ${{ env.RG_APP }} --query properties.outputs.aksName.value)
        echo "AKS_CLUSTER_NAME="$AKS_CLUSTER_NAME
        echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV

        echo "LOCAL_IP=$(curl whatismyip.akamai.com)" >> $GITHUB_ENV
        echo "GH_WORKSPACE=${{ github.workspace }}" >> $GITHUB_ENV # "/github/workspace"

      shell: bash

    - name: Display environment variables
      run: |
        echo "Checking GITHUB_ENV"
        echo "LOCAL_IP=$LOCAL_IP"
        echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME"
        echo "GH_WORKSPACE=$GH_WORKSPACE"
      shell: bash

    # https://github.com/Azure/aks-set-context/tree/releases/v1
    - name: AKS Set Context
      uses: azure/aks-set-context@v1
      with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
          resource-group: ${{ env.RG_APP }} 
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
      id: setakscontext

    # TODO for AAD Integration:
    # https://github.com/marketplace/actions/setup-kubelogin
    # https://github.com/Azure/kubelogin
    - uses: azure/use-kubelogin@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        kubelogin-version: 'latest'
      id: kubelogin

    # https://docs.vmware.com/en/Cluster-Essentials-for-VMware-Tanzu/1.4/cluster-essentials/deploy.html
    - name: Test CLI
      run: |

            kubectl config get-contexts
            kubectl get nodes -o wide

      shell: bash


    - name: Azure Logout security hardening
      run: |
          az logout
          az cache purge
          az account clear
      shell: bash